///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace HBTest
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The LoginWithWrongEmail recording.
    /// </summary>
    [TestModule("56a52b1c-ba46-4592-8aef-5d54e3563513", ModuleType.Recording, 1)]
    public partial class LoginWithWrongEmail : ITestModule
    {
        /// <summary>
        /// Holds an instance of the HBTestRepository repository.
        /// </summary>
        public static HBTestRepository repo = HBTestRepository.Instance;

        static LoginWithWrongEmail instance = new LoginWithWrongEmail();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public LoginWithWrongEmail()
        {
            Email = "asdsafsfadfdasf{LControlKey down}{RMenu down}{Qkey}{LControlKey up}{LControlKey up}{RMenu up}asdfk.com";
            rPassword = "oooooooooo";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static LoginWithWrongEmail Instance
        {
            get { return instance; }
        }

#region Variables

        string _Email;

        /// <summary>
        /// Gets or sets the value of variable Email.
        /// </summary>
        [TestVariable("5875e627-f982-46f8-a618-1ba6e6dff418")]
        public string Email
        {
            get { return _Email; }
            set { _Email = value; }
        }

        string _rPassword;

        /// <summary>
        /// Gets or sets the value of variable rPassword.
        /// </summary>
        [TestVariable("429b1dbd-bea2-4379-b735-d0c7e70b2af6")]
        public string rPassword
        {
            get { return _rPassword; }
            set { _rPassword = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 20;
            Delay.SpeedFactor = 1.00;

            Init();

            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'LoginPage.TxtUserName' at 107;32.", repo.LoginPage.TxtUserNameInfo, new RecordItemIndex(0));
            repo.LoginPage.TxtUserName.Click("107;32");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$Email' with focus on 'LoginPage.TxtUserName'.", repo.LoginPage.TxtUserNameInfo, new RecordItemIndex(1));
            repo.LoginPage.TxtUserName.PressKeys(Email);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'LoginPage.TxtPassword' at 65;39.", repo.LoginPage.TxtPasswordInfo, new RecordItemIndex(2));
            repo.LoginPage.TxtPassword.Click("65;39");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$rPassword' with focus on 'LoginPage.TxtPassword'.", repo.LoginPage.TxtPasswordInfo, new RecordItemIndex(3));
            repo.LoginPage.TxtPassword.PressKeys(rPassword);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'LoginPage.BtnLogin' at 172;30.", repo.LoginPage.BtnLoginInfo, new RecordItemIndex(4));
            repo.LoginPage.BtnLogin.Click("172;30");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (InnerText='Girdiğiniz şifre eksik veya hatalı.') on item 'LoginPage.ErrorNotification'.", repo.LoginPage.ErrorNotificationInfo, new RecordItemIndex(5));
            Validate.AttributeEqual(repo.LoginPage.ErrorNotificationInfo, "InnerText", "Girdiğiniz şifre eksik veya hatalı.");
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ReloadLoginPage.ReloadPage' at 17;22.", repo.ReloadLoginPage.ReloadPageInfo, new RecordItemIndex(6));
            repo.ReloadLoginPage.ReloadPage.Click("17;22");
            Delay.Milliseconds(0);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
